<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.harry.hello.mapper.common.UserMapper">

  <!-- 配置 mybatis ehcache -->
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" >
    <property name="timeToIdleSeconds" value="3600"/><!--1 hour-->
    <property name="timeToLiveSeconds" value="3600"/><!--1 hour-->
    <property name="maxEntriesLocalHeap" value="1000"/>
    <property name="maxEntriesLocalDisk" value="10000000"/>
    <property name="memoryStoreEvictionPolicy" value="LRU"/>
  </cache>


  <resultMap id="BaseResultMap" type="com.harry.hello.entity.common.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="tel" jdbcType="BIGINT" property="tel" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
    <result column="logtime" jdbcType="TIMESTAMP" property="logtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, birthday, address, tel, company, job, description, regtime, 
    logtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.harry.hello.entity.common.User">
    insert into user (id, username, password, 
      birthday, address, tel, 
      company, job, description, 
      regtime, logtime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{tel,jdbcType=BIGINT}, 
      #{company,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{regtime,jdbcType=TIMESTAMP}, #{logtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.harry.hello.entity.common.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="regtime != null">
        regtime,
      </if>
      <if test="logtime != null">
        logtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=BIGINT},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logtime != null">
        #{logtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.harry.hello.entity.common.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=BIGINT},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null">
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logtime != null">
        logtime = #{logtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.harry.hello.entity.common.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=BIGINT},
      company = #{company,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      logtime = #{logtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUsername" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
  </select>
</mapper>